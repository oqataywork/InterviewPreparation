Существует три типа ошибок
1) Баги
2) Ошибки пользователя
3) Исключения
a) Системные исключения
б) Исключения, предопределенные программистом


Баги - это ошибки программиста, неправильная имплементация определенной логики, которая приводит к неправильной работе приложения
Данный тип ошибок можно определить и исправить в процессе отладки.

Ошибки пользователя - для предотвращения советуется использовать валидацию

Исключения - ситуации, которые сложно предвидеть. Существуют двух типов.
Современная логика обслуживания исключений
-Записать в логах какое исключение возникло
-Постаратьсся записать в логах, если это возможно, какие данные привели к возникновению
-Прекратить работу метода путем возврата объекта по умолчание или выброситься в метод выше

Исключение — это объект определенного класса, которое наследует класс Exception, в зависимости от имплементации исключения могут наследовать классы SystemException и ApplicationException. Оба эти классы наследуют класс Exception. Конвенция предполагает, что каждый класс исключений будет в своем названии иметь слово Exception в конце. Также конвенция предполагает, что исключения, которые наследуют класс SystemException будут выбрасываться библиотеками Microsoft .Net, а исключения, которые будут наследовать ApplicationException, будут исключениями приложения и будут созданы программистом.

Свойства Exception:
-Message
-Data
-StackTrace (цепочка методов, которая помогает определить)
-HelpLink (ссылка на страницу в интернете, где можно поискать ответ)
-InnerException (Внутреннее исключение - возникло в следствии другого исключения)
-Source (Название сборки или объекта, в котором возникло исключение)
-TargetSite (здесь содержится различная информация о методе в котором возникло исключение – данную информацию можно добавить в лог приложения.)

Популярные исключения:

DivideByZeroException: представляет исключение, которое генерируется при делении на ноль

ArgumentOutOfRangeException: генерируется, если значение аргумента находится вне диапазона допустимых значений

ArgumentException: генерируется, если в метод для параметра передается некорректное значение

IndexOutOfRangeException: генерируется, если индекс элемента массива или коллекции находится вне диапазона допустимых значений

InvalidCastException: генерируется при попытке произвести недопустимые преобразования типов

NullReferenceException: генерируется при попытке обращения к объекту, который равен null (то есть по сути неопределен)


